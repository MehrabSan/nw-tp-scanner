name: Build & Pack (TPS.Desktop)

on:
  push:
    branches: [ auto-build ]
  workflow_dispatch: {}

jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET 8
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Install Velopack CLI
        run: dotnet tool install -g vpk

      - name: Locate solution (auto-detect .sln)
        id: sln
        shell: pwsh
        run: |
          $sln = Get-ChildItem -Path . -Filter *.sln -Recurse | Select-Object -First 1
          if (-not $sln) { Write-Error "No .sln found in repo"; exit 1 }
          "sln=$($sln.FullName)" >> $env:GITHUB_OUTPUT
          Write-Host "Using solution: $($sln.FullName)"

      - name: Restore
        shell: pwsh
        run: dotnet restore "${{ steps.sln.outputs.sln }}"

      - name: Build (Release)
        shell: pwsh
        run: dotnet build "${{ steps.sln.outputs.sln }}" -c Release --no-restore

      - name: Publish (win-x64)
        shell: pwsh
        run: dotnet publish .\TPS.Desktop\TPS.Desktop.csproj -c Release -r win-x64 --self-contained false -o .\out\win-x64

      - name: Pack with Velopack
        shell: pwsh
        run: |
          $appid   = "NWTPScanner"                  # فقط حروف/عدد/_/-/. مجاز هستند
          $version = "0.1.${{ github.run_number }}" # نسخه سه‌بخشی (SemVer)
          vpk pack `
            -u "$appid" `
            -v "$version" `
            -p ".\out\win-x64" `
            -e "TPS.Desktop.exe" `
            -o ".\dist\win-x64" `
            -n "NW TP Scanner" `
            --signTemplate "cmd /c echo SKIP SIGN {{file}}"
          Write-Host "Packed $appid $version"

      - name: Upload Artifacts (Exe, Setup, Publish)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: tps-desktop-win-x64
          path: |
            dist\win-x64\**
            out\win-x64\**
            out\win-x64\TPS.Desktop.exe
